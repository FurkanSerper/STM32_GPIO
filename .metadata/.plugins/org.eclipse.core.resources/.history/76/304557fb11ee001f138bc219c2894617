/*
 * i2c_exercise.c
 *
 *  Created on: Feb 18, 2025
 *      Author: furkanserper
 */

/*
 * EXERCISE     I2C Master (STM32 Discovery) and I2C Slave (Arduino Board) Communication
 *
 * when button on the STM32 board (master) is pressed, master should send data to the Arduino
 * board (slave). The data received by the Arduino board will be displayed on the serial monitor
 * terminal of the Arduino IDE
 *
 * 1- Use I2C SCL = 100kHz (Standart Mode)
 * 2- USer external pull up resistor (3.3kohm) for SDA and SCL line
 *
 * Note: if you don't have external pull up resistors, you can also try with activating STM32
 * I2C pin's internal pull up resistors
 *
 * SCL --> PB6
 * SDA --> PB9
 *
 */

#include "stm32f407xx.h"
#include "string.h"

void delay(void)
{
	for(uint32_t i = 0; i<500000/2; i++)
	{

	}
}

/*
 * SCL --> PB6
 * SDA --> PB9
 */
void I2C1_GPIOInits(void)
{
	GPIO_Handle_t I2CPins;

	I2CPins.pGPIOx = GPIOB;
	I2CPins.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_ALTFN;
	I2CPins.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_OD;
	I2CPins.GPIO_PinConfig.GPIO_PinAltFunMode = 4;
	I2CPins.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;

	//SCL
	I2CPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_6;
	GPIO_Init(&I2CPins);

	//SDA
	I2CPins.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_9;
	GPIO_Init(&I2CPins);


}

void I2C1_Inits(void)
{



}



int main(void)
{

	I2C1_GPIOInits();


	return 0;
}
