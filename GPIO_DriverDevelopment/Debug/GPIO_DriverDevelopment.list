
GPIO_DriverDevelopment.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000188  08000000  08000000  00001000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         00000954  08000188  08000188  00001188  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00000000  08000adc  08000ae4  00001ae4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  3 .ARM.extab    00000000  08000adc  08000adc  00001ae4  2**0
                  CONTENTS
  4 .ARM          00000000  08000adc  08000adc  00001ae4  2**0
                  CONTENTS
  5 .preinit_array 00000000  08000adc  08000ae4  00001ae4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  08000adc  08000adc  00001adc  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  7 .fini_array   00000004  08000ae0  08000ae0  00001ae0  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  8 .data         00000000  20000000  20000000  00001ae4  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  9 .ccmram       00000000  10000000  10000000  00001ae4  2**0
                  CONTENTS
 10 .bss          0000001c  20000000  20000000  00002000  2**2
                  ALLOC
 11 ._user_heap_stack 00000604  2000001c  2000001c  00002000  2**0
                  ALLOC
 12 .ARM.attributes 00000030  00000000  00000000  00001ae4  2**0
                  CONTENTS, READONLY
 13 .debug_info   00000a9f  00000000  00000000  00001b14  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 14 .debug_abbrev 000002dc  00000000  00000000  000025b3  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 15 .debug_aranges 000000c8  00000000  00000000  00002890  2**3
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 16 .debug_rnglists 0000008c  00000000  00000000  00002958  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 17 .debug_macro  0000232c  00000000  00000000  000029e4  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 18 .debug_line   000012cb  00000000  00000000  00004d10  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 19 .debug_str    000092c7  00000000  00000000  00005fdb  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 20 .comment      00000043  00000000  00000000  0000f2a2  2**0
                  CONTENTS, READONLY
 21 .debug_frame  00000288  00000000  00000000  0000f2e8  2**2
                  CONTENTS, READONLY, DEBUGGING, OCTETS
 22 .debug_line_str 00000077  00000000  00000000  0000f570  2**0
                  CONTENTS, READONLY, DEBUGGING, OCTETS

Disassembly of section .text:

08000188 <__do_global_dtors_aux>:
 8000188:	b510      	push	{r4, lr}
 800018a:	4c05      	ldr	r4, [pc, #20]	@ (80001a0 <__do_global_dtors_aux+0x18>)
 800018c:	7823      	ldrb	r3, [r4, #0]
 800018e:	b933      	cbnz	r3, 800019e <__do_global_dtors_aux+0x16>
 8000190:	4b04      	ldr	r3, [pc, #16]	@ (80001a4 <__do_global_dtors_aux+0x1c>)
 8000192:	b113      	cbz	r3, 800019a <__do_global_dtors_aux+0x12>
 8000194:	4804      	ldr	r0, [pc, #16]	@ (80001a8 <__do_global_dtors_aux+0x20>)
 8000196:	f3af 8000 	nop.w
 800019a:	2301      	movs	r3, #1
 800019c:	7023      	strb	r3, [r4, #0]
 800019e:	bd10      	pop	{r4, pc}
 80001a0:	20000000 	.word	0x20000000
 80001a4:	00000000 	.word	0x00000000
 80001a8:	08000ac4 	.word	0x08000ac4

080001ac <frame_dummy>:
 80001ac:	b508      	push	{r3, lr}
 80001ae:	4b03      	ldr	r3, [pc, #12]	@ (80001bc <frame_dummy+0x10>)
 80001b0:	b11b      	cbz	r3, 80001ba <frame_dummy+0xe>
 80001b2:	4903      	ldr	r1, [pc, #12]	@ (80001c0 <frame_dummy+0x14>)
 80001b4:	4803      	ldr	r0, [pc, #12]	@ (80001c4 <frame_dummy+0x18>)
 80001b6:	f3af 8000 	nop.w
 80001ba:	bd08      	pop	{r3, pc}
 80001bc:	00000000 	.word	0x00000000
 80001c0:	20000004 	.word	0x20000004
 80001c4:	08000ac4 	.word	0x08000ac4

080001c8 <delay>:

#include <stm32f407xx.h>
#include <stm32f407xx_gpio_driver.h>

void delay(void)
{
 80001c8:	b480      	push	{r7}
 80001ca:	b083      	sub	sp, #12
 80001cc:	af00      	add	r7, sp, #0
	for(uint32_t i = 0; i<50000; i++);
 80001ce:	2300      	movs	r3, #0
 80001d0:	607b      	str	r3, [r7, #4]
 80001d2:	e002      	b.n	80001da <delay+0x12>
 80001d4:	687b      	ldr	r3, [r7, #4]
 80001d6:	3301      	adds	r3, #1
 80001d8:	607b      	str	r3, [r7, #4]
 80001da:	687b      	ldr	r3, [r7, #4]
 80001dc:	f24c 324f 	movw	r2, #49999	@ 0xc34f
 80001e0:	4293      	cmp	r3, r2
 80001e2:	d9f7      	bls.n	80001d4 <delay+0xc>
}
 80001e4:	bf00      	nop
 80001e6:	bf00      	nop
 80001e8:	370c      	adds	r7, #12
 80001ea:	46bd      	mov	sp, r7
 80001ec:	f85d 7b04 	ldr.w	r7, [sp], #4
 80001f0:	4770      	bx	lr
	...

080001f4 <main>:

int main(void)
{
 80001f4:	b580      	push	{r7, lr}
 80001f6:	b088      	sub	sp, #32
 80001f8:	af00      	add	r7, sp, #0
	GPIO_Handle_t GpioLed, GpioButton;
	memset(&GpioLed,0,sizeof(GpioLed));
 80001fa:	f107 0310 	add.w	r3, r7, #16
 80001fe:	220c      	movs	r2, #12
 8000200:	2100      	movs	r1, #0
 8000202:	4618      	mov	r0, r3
 8000204:	f000 fc32 	bl	8000a6c <memset>
	memset(&GpioButton,0,sizeof(GpioButton));
 8000208:	1d3b      	adds	r3, r7, #4
 800020a:	220c      	movs	r2, #12
 800020c:	2100      	movs	r1, #0
 800020e:	4618      	mov	r0, r3
 8000210:	f000 fc2c 	bl	8000a6c <memset>

	/* Port D  Pin 12 */
	GpioLed.pGPIOx = GPIOD;
 8000214:	4b23      	ldr	r3, [pc, #140]	@ (80002a4 <main+0xb0>)
 8000216:	613b      	str	r3, [r7, #16]
	GpioLed.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_12;
 8000218:	230c      	movs	r3, #12
 800021a:	753b      	strb	r3, [r7, #20]
	GpioLed.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_OUT;
 800021c:	2301      	movs	r3, #1
 800021e:	757b      	strb	r3, [r7, #21]
	GpioLed.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 8000220:	2302      	movs	r3, #2
 8000222:	75bb      	strb	r3, [r7, #22]
	GpioLed.GPIO_PinConfig.GPIO_PinOPType = GPIO_OP_TYPE_PP;
 8000224:	2300      	movs	r3, #0
 8000226:	763b      	strb	r3, [r7, #24]
	GpioLed.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_NO_PUPD;
 8000228:	2300      	movs	r3, #0
 800022a:	75fb      	strb	r3, [r7, #23]

	GPIO_PeriClockControl(GpioLed.pGPIOx, ENABLE);
 800022c:	693b      	ldr	r3, [r7, #16]
 800022e:	2101      	movs	r1, #1
 8000230:	4618      	mov	r0, r3
 8000232:	f000 f871 	bl	8000318 <GPIO_PeriClockControl>
	GPIO_Init(&GpioLed);
 8000236:	f107 0310 	add.w	r3, r7, #16
 800023a:	4618      	mov	r0, r3
 800023c:	f000 f954 	bl	80004e8 <GPIO_Init>

	/////////////////////////////////////


	GpioButton.pGPIOx = GPIOD;
 8000240:	4b18      	ldr	r3, [pc, #96]	@ (80002a4 <main+0xb0>)
 8000242:	607b      	str	r3, [r7, #4]
	GpioButton.GPIO_PinConfig.GPIO_PinNumber = GPIO_PIN_NO_5;
 8000244:	2305      	movs	r3, #5
 8000246:	723b      	strb	r3, [r7, #8]
	GpioButton.GPIO_PinConfig.GPIO_PinMode = GPIO_MODE_IT_FT;
 8000248:	2304      	movs	r3, #4
 800024a:	727b      	strb	r3, [r7, #9]
	GpioButton.GPIO_PinConfig.GPIO_PinSpeed = GPIO_SPEED_FAST;
 800024c:	2302      	movs	r3, #2
 800024e:	72bb      	strb	r3, [r7, #10]
	GpioButton.GPIO_PinConfig.GPIO_PinPuPdControl = GPIO_PIN_PU;
 8000250:	2301      	movs	r3, #1
 8000252:	72fb      	strb	r3, [r7, #11]

	GPIO_PeriClockControl(GpioButton.pGPIOx, ENABLE);
 8000254:	687b      	ldr	r3, [r7, #4]
 8000256:	2101      	movs	r1, #1
 8000258:	4618      	mov	r0, r3
 800025a:	f000 f85d 	bl	8000318 <GPIO_PeriClockControl>
	GPIO_Init(&GpioButton);
 800025e:	1d3b      	adds	r3, r7, #4
 8000260:	4618      	mov	r0, r3
 8000262:	f000 f941 	bl	80004e8 <GPIO_Init>


	// IRQ configuration
	GPIO_IRQPriorityConfig(IRQ_NO_EXTI9_5, NVIC_IRQ_PRI15);
 8000266:	210f      	movs	r1, #15
 8000268:	2017      	movs	r0, #23
 800026a:	f000 fbb5 	bl	80009d8 <GPIO_IRQPriorityConfig>
	GPIO_IRQInterruptConfig(IRQ_NO_EXTI9_5, ENABLE);
 800026e:	2101      	movs	r1, #1
 8000270:	2017      	movs	r0, #23
 8000272:	f000 fb01 	bl	8000878 <GPIO_IRQInterruptConfig>

    /* Loop forever */

	uint8_t buttonValue=0;
 8000276:	2300      	movs	r3, #0
 8000278:	77fb      	strb	r3, [r7, #31]
	while(1)
	{

		buttonValue = GPIO_ReadFromInputPin(GpioButton.pGPIOx, GpioButton.GPIO_PinConfig.GPIO_PinNumber);
 800027a:	687b      	ldr	r3, [r7, #4]
 800027c:	7a3a      	ldrb	r2, [r7, #8]
 800027e:	4611      	mov	r1, r2
 8000280:	4618      	mov	r0, r3
 8000282:	f000 facd 	bl	8000820 <GPIO_ReadFromInputPin>
 8000286:	4603      	mov	r3, r0
 8000288:	77fb      	strb	r3, [r7, #31]
		if(buttonValue == 1)
 800028a:	7ffb      	ldrb	r3, [r7, #31]
 800028c:	2b01      	cmp	r3, #1
 800028e:	d1f4      	bne.n	800027a <main+0x86>
		{
			delay();
 8000290:	f7ff ff9a 	bl	80001c8 <delay>
			GPIO_ToggleOutputPin(GpioLed.pGPIOx, GpioLed.GPIO_PinConfig.GPIO_PinNumber);
 8000294:	693b      	ldr	r3, [r7, #16]
 8000296:	7d3a      	ldrb	r2, [r7, #20]
 8000298:	4611      	mov	r1, r2
 800029a:	4618      	mov	r0, r3
 800029c:	f000 fad6 	bl	800084c <GPIO_ToggleOutputPin>
		buttonValue = GPIO_ReadFromInputPin(GpioButton.pGPIOx, GpioButton.GPIO_PinConfig.GPIO_PinNumber);
 80002a0:	e7eb      	b.n	800027a <main+0x86>
 80002a2:	bf00      	nop
 80002a4:	40020c00 	.word	0x40020c00

080002a8 <EXTI9_5_IRQHandler>:
	}
}


void EXTI9_5_IRQHandler(void)
{
 80002a8:	b580      	push	{r7, lr}
 80002aa:	af00      	add	r7, sp, #0
	GPIO_IRQHandling(GPIO_PIN_NO_5);
 80002ac:	2005      	movs	r0, #5
 80002ae:	f000 fbbd 	bl	8000a2c <GPIO_IRQHandling>
	GPIO_ToggleOutputPin(GPIOD, GPIO_PIN_NO_12);
 80002b2:	210c      	movs	r1, #12
 80002b4:	4802      	ldr	r0, [pc, #8]	@ (80002c0 <EXTI9_5_IRQHandler+0x18>)
 80002b6:	f000 fac9 	bl	800084c <GPIO_ToggleOutputPin>
}
 80002ba:	bf00      	nop
 80002bc:	bd80      	pop	{r7, pc}
 80002be:	bf00      	nop
 80002c0:	40020c00 	.word	0x40020c00

080002c4 <Reset_Handler>:

  .section .text.Reset_Handler
  .weak Reset_Handler
  .type Reset_Handler, %function
Reset_Handler:
  ldr   r0, =_estack
 80002c4:	480d      	ldr	r0, [pc, #52]	@ (80002fc <LoopForever+0x2>)
  mov   sp, r0          /* set stack pointer */
 80002c6:	4685      	mov	sp, r0
/* Call the clock system initialization function.*/
  bl  SystemInit
 80002c8:	f3af 8000 	nop.w

/* Copy the data segment initializers from flash to SRAM */
  ldr r0, =_sdata
 80002cc:	480c      	ldr	r0, [pc, #48]	@ (8000300 <LoopForever+0x6>)
  ldr r1, =_edata
 80002ce:	490d      	ldr	r1, [pc, #52]	@ (8000304 <LoopForever+0xa>)
  ldr r2, =_sidata
 80002d0:	4a0d      	ldr	r2, [pc, #52]	@ (8000308 <LoopForever+0xe>)
  movs r3, #0
 80002d2:	2300      	movs	r3, #0
  b LoopCopyDataInit
 80002d4:	e002      	b.n	80002dc <LoopCopyDataInit>

080002d6 <CopyDataInit>:

CopyDataInit:
  ldr r4, [r2, r3]
 80002d6:	58d4      	ldr	r4, [r2, r3]
  str r4, [r0, r3]
 80002d8:	50c4      	str	r4, [r0, r3]
  adds r3, r3, #4
 80002da:	3304      	adds	r3, #4

080002dc <LoopCopyDataInit>:

LoopCopyDataInit:
  adds r4, r0, r3
 80002dc:	18c4      	adds	r4, r0, r3
  cmp r4, r1
 80002de:	428c      	cmp	r4, r1
  bcc CopyDataInit
 80002e0:	d3f9      	bcc.n	80002d6 <CopyDataInit>

/* Zero fill the bss segment. */
  ldr r2, =_sbss
 80002e2:	4a0a      	ldr	r2, [pc, #40]	@ (800030c <LoopForever+0x12>)
  ldr r4, =_ebss
 80002e4:	4c0a      	ldr	r4, [pc, #40]	@ (8000310 <LoopForever+0x16>)
  movs r3, #0
 80002e6:	2300      	movs	r3, #0
  b LoopFillZerobss
 80002e8:	e001      	b.n	80002ee <LoopFillZerobss>

080002ea <FillZerobss>:

FillZerobss:
  str  r3, [r2]
 80002ea:	6013      	str	r3, [r2, #0]
  adds r2, r2, #4
 80002ec:	3204      	adds	r2, #4

080002ee <LoopFillZerobss>:

LoopFillZerobss:
  cmp r2, r4
 80002ee:	42a2      	cmp	r2, r4
  bcc FillZerobss
 80002f0:	d3fb      	bcc.n	80002ea <FillZerobss>

/* Call static constructors */
  bl __libc_init_array
 80002f2:	f000 fbc3 	bl	8000a7c <__libc_init_array>
/* Call the application's entry point.*/
  bl main
 80002f6:	f7ff ff7d 	bl	80001f4 <main>

080002fa <LoopForever>:

LoopForever:
  b LoopForever
 80002fa:	e7fe      	b.n	80002fa <LoopForever>
  ldr   r0, =_estack
 80002fc:	20020000 	.word	0x20020000
  ldr r0, =_sdata
 8000300:	20000000 	.word	0x20000000
  ldr r1, =_edata
 8000304:	20000000 	.word	0x20000000
  ldr r2, =_sidata
 8000308:	08000ae4 	.word	0x08000ae4
  ldr r2, =_sbss
 800030c:	20000000 	.word	0x20000000
  ldr r4, =_ebss
 8000310:	2000001c 	.word	0x2000001c

08000314 <ADC_IRQHandler>:
 * @retval : None
*/
  .section .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b Infinite_Loop
 8000314:	e7fe      	b.n	8000314 <ADC_IRQHandler>
	...

08000318 <GPIO_PeriClockControl>:

/*
 * Peripheral Clock Setup
 */
void GPIO_PeriClockControl(GPIO_RegDef_t *pGPIOx, uint8_t EnorDi)
{
 8000318:	b480      	push	{r7}
 800031a:	b083      	sub	sp, #12
 800031c:	af00      	add	r7, sp, #0
 800031e:	6078      	str	r0, [r7, #4]
 8000320:	460b      	mov	r3, r1
 8000322:	70fb      	strb	r3, [r7, #3]
	if(EnorDi == ENABLE)
 8000324:	78fb      	ldrb	r3, [r7, #3]
 8000326:	2b01      	cmp	r3, #1
 8000328:	d162      	bne.n	80003f0 <GPIO_PeriClockControl+0xd8>
	{
		if(pGPIOx == GPIOA)
 800032a:	687b      	ldr	r3, [r7, #4]
 800032c:	4a64      	ldr	r2, [pc, #400]	@ (80004c0 <GPIO_PeriClockControl+0x1a8>)
 800032e:	4293      	cmp	r3, r2
 8000330:	d106      	bne.n	8000340 <GPIO_PeriClockControl+0x28>
		{
			GPIOA_PCLK_EN();
 8000332:	4b64      	ldr	r3, [pc, #400]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000334:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000336:	4a63      	ldr	r2, [pc, #396]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000338:	f043 0301 	orr.w	r3, r3, #1
 800033c:	6313      	str	r3, [r2, #48]	@ 0x30
			GPIOI_PCLK_DIS();

		}

	}
}
 800033e:	e0b9      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOB)
 8000340:	687b      	ldr	r3, [r7, #4]
 8000342:	4a61      	ldr	r2, [pc, #388]	@ (80004c8 <GPIO_PeriClockControl+0x1b0>)
 8000344:	4293      	cmp	r3, r2
 8000346:	d106      	bne.n	8000356 <GPIO_PeriClockControl+0x3e>
			GPIOB_PCLK_EN();
 8000348:	4b5e      	ldr	r3, [pc, #376]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800034a:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800034c:	4a5d      	ldr	r2, [pc, #372]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800034e:	f043 0302 	orr.w	r3, r3, #2
 8000352:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000354:	e0ae      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOC)
 8000356:	687b      	ldr	r3, [r7, #4]
 8000358:	4a5c      	ldr	r2, [pc, #368]	@ (80004cc <GPIO_PeriClockControl+0x1b4>)
 800035a:	4293      	cmp	r3, r2
 800035c:	d106      	bne.n	800036c <GPIO_PeriClockControl+0x54>
			GPIOC_PCLK_EN();
 800035e:	4b59      	ldr	r3, [pc, #356]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000360:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000362:	4a58      	ldr	r2, [pc, #352]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000364:	f043 0304 	orr.w	r3, r3, #4
 8000368:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800036a:	e0a3      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOD)
 800036c:	687b      	ldr	r3, [r7, #4]
 800036e:	4a58      	ldr	r2, [pc, #352]	@ (80004d0 <GPIO_PeriClockControl+0x1b8>)
 8000370:	4293      	cmp	r3, r2
 8000372:	d106      	bne.n	8000382 <GPIO_PeriClockControl+0x6a>
			GPIOD_PCLK_EN();
 8000374:	4b53      	ldr	r3, [pc, #332]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000376:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000378:	4a52      	ldr	r2, [pc, #328]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800037a:	f043 0308 	orr.w	r3, r3, #8
 800037e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000380:	e098      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOE)
 8000382:	687b      	ldr	r3, [r7, #4]
 8000384:	4a53      	ldr	r2, [pc, #332]	@ (80004d4 <GPIO_PeriClockControl+0x1bc>)
 8000386:	4293      	cmp	r3, r2
 8000388:	d106      	bne.n	8000398 <GPIO_PeriClockControl+0x80>
			GPIOE_PCLK_EN();
 800038a:	4b4e      	ldr	r3, [pc, #312]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800038c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800038e:	4a4d      	ldr	r2, [pc, #308]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000390:	f043 0310 	orr.w	r3, r3, #16
 8000394:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000396:	e08d      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOF)
 8000398:	687b      	ldr	r3, [r7, #4]
 800039a:	4a4f      	ldr	r2, [pc, #316]	@ (80004d8 <GPIO_PeriClockControl+0x1c0>)
 800039c:	4293      	cmp	r3, r2
 800039e:	d106      	bne.n	80003ae <GPIO_PeriClockControl+0x96>
			GPIOF_PCLK_EN();
 80003a0:	4b48      	ldr	r3, [pc, #288]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003a2:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003a4:	4a47      	ldr	r2, [pc, #284]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003a6:	f043 0320 	orr.w	r3, r3, #32
 80003aa:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ac:	e082      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOG)
 80003ae:	687b      	ldr	r3, [r7, #4]
 80003b0:	4a4a      	ldr	r2, [pc, #296]	@ (80004dc <GPIO_PeriClockControl+0x1c4>)
 80003b2:	4293      	cmp	r3, r2
 80003b4:	d106      	bne.n	80003c4 <GPIO_PeriClockControl+0xac>
			GPIOG_PCLK_EN();
 80003b6:	4b43      	ldr	r3, [pc, #268]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003b8:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003ba:	4a42      	ldr	r2, [pc, #264]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003bc:	f043 0340 	orr.w	r3, r3, #64	@ 0x40
 80003c0:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003c2:	e077      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOH)
 80003c4:	687b      	ldr	r3, [r7, #4]
 80003c6:	4a46      	ldr	r2, [pc, #280]	@ (80004e0 <GPIO_PeriClockControl+0x1c8>)
 80003c8:	4293      	cmp	r3, r2
 80003ca:	d106      	bne.n	80003da <GPIO_PeriClockControl+0xc2>
			GPIOH_PCLK_EN();
 80003cc:	4b3d      	ldr	r3, [pc, #244]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003ce:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003d0:	4a3c      	ldr	r2, [pc, #240]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003d2:	f043 0380 	orr.w	r3, r3, #128	@ 0x80
 80003d6:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003d8:	e06c      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOI)
 80003da:	687b      	ldr	r3, [r7, #4]
 80003dc:	4a41      	ldr	r2, [pc, #260]	@ (80004e4 <GPIO_PeriClockControl+0x1cc>)
 80003de:	4293      	cmp	r3, r2
 80003e0:	d168      	bne.n	80004b4 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_EN();
 80003e2:	4b38      	ldr	r3, [pc, #224]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003e4:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003e6:	4a37      	ldr	r2, [pc, #220]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003e8:	f443 7380 	orr.w	r3, r3, #256	@ 0x100
 80003ec:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80003ee:	e061      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		if(pGPIOx == GPIOA)
 80003f0:	687b      	ldr	r3, [r7, #4]
 80003f2:	4a33      	ldr	r2, [pc, #204]	@ (80004c0 <GPIO_PeriClockControl+0x1a8>)
 80003f4:	4293      	cmp	r3, r2
 80003f6:	d106      	bne.n	8000406 <GPIO_PeriClockControl+0xee>
			GPIOA_PCLK_DIS();
 80003f8:	4b32      	ldr	r3, [pc, #200]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003fa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80003fc:	4a31      	ldr	r2, [pc, #196]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80003fe:	f023 0301 	bic.w	r3, r3, #1
 8000402:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000404:	e056      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOB)
 8000406:	687b      	ldr	r3, [r7, #4]
 8000408:	4a2f      	ldr	r2, [pc, #188]	@ (80004c8 <GPIO_PeriClockControl+0x1b0>)
 800040a:	4293      	cmp	r3, r2
 800040c:	d106      	bne.n	800041c <GPIO_PeriClockControl+0x104>
			GPIOB_PCLK_DIS();
 800040e:	4b2d      	ldr	r3, [pc, #180]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000410:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000412:	4a2c      	ldr	r2, [pc, #176]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000414:	f023 0302 	bic.w	r3, r3, #2
 8000418:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800041a:	e04b      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOC)
 800041c:	687b      	ldr	r3, [r7, #4]
 800041e:	4a2b      	ldr	r2, [pc, #172]	@ (80004cc <GPIO_PeriClockControl+0x1b4>)
 8000420:	4293      	cmp	r3, r2
 8000422:	d106      	bne.n	8000432 <GPIO_PeriClockControl+0x11a>
			GPIOC_PCLK_DIS();
 8000424:	4b27      	ldr	r3, [pc, #156]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000426:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000428:	4a26      	ldr	r2, [pc, #152]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800042a:	f023 0304 	bic.w	r3, r3, #4
 800042e:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000430:	e040      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOD)
 8000432:	687b      	ldr	r3, [r7, #4]
 8000434:	4a26      	ldr	r2, [pc, #152]	@ (80004d0 <GPIO_PeriClockControl+0x1b8>)
 8000436:	4293      	cmp	r3, r2
 8000438:	d106      	bne.n	8000448 <GPIO_PeriClockControl+0x130>
			GPIOD_PCLK_DIS();
 800043a:	4b22      	ldr	r3, [pc, #136]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800043c:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800043e:	4a21      	ldr	r2, [pc, #132]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000440:	f023 0308 	bic.w	r3, r3, #8
 8000444:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000446:	e035      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOE)
 8000448:	687b      	ldr	r3, [r7, #4]
 800044a:	4a22      	ldr	r2, [pc, #136]	@ (80004d4 <GPIO_PeriClockControl+0x1bc>)
 800044c:	4293      	cmp	r3, r2
 800044e:	d106      	bne.n	800045e <GPIO_PeriClockControl+0x146>
			GPIOE_PCLK_DIS();
 8000450:	4b1c      	ldr	r3, [pc, #112]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000452:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000454:	4a1b      	ldr	r2, [pc, #108]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000456:	f023 0310 	bic.w	r3, r3, #16
 800045a:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800045c:	e02a      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOF)
 800045e:	687b      	ldr	r3, [r7, #4]
 8000460:	4a1d      	ldr	r2, [pc, #116]	@ (80004d8 <GPIO_PeriClockControl+0x1c0>)
 8000462:	4293      	cmp	r3, r2
 8000464:	d106      	bne.n	8000474 <GPIO_PeriClockControl+0x15c>
			GPIOF_PCLK_DIS();
 8000466:	4b17      	ldr	r3, [pc, #92]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000468:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 800046a:	4a16      	ldr	r2, [pc, #88]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800046c:	f023 0320 	bic.w	r3, r3, #32
 8000470:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000472:	e01f      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOG)
 8000474:	687b      	ldr	r3, [r7, #4]
 8000476:	4a19      	ldr	r2, [pc, #100]	@ (80004dc <GPIO_PeriClockControl+0x1c4>)
 8000478:	4293      	cmp	r3, r2
 800047a:	d106      	bne.n	800048a <GPIO_PeriClockControl+0x172>
			GPIOG_PCLK_DIS();
 800047c:	4b11      	ldr	r3, [pc, #68]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 800047e:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000480:	4a10      	ldr	r2, [pc, #64]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000482:	f023 0340 	bic.w	r3, r3, #64	@ 0x40
 8000486:	6313      	str	r3, [r2, #48]	@ 0x30
}
 8000488:	e014      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOH)
 800048a:	687b      	ldr	r3, [r7, #4]
 800048c:	4a14      	ldr	r2, [pc, #80]	@ (80004e0 <GPIO_PeriClockControl+0x1c8>)
 800048e:	4293      	cmp	r3, r2
 8000490:	d106      	bne.n	80004a0 <GPIO_PeriClockControl+0x188>
			GPIOH_PCLK_DIS();
 8000492:	4b0c      	ldr	r3, [pc, #48]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000494:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 8000496:	4a0b      	ldr	r2, [pc, #44]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 8000498:	f023 0380 	bic.w	r3, r3, #128	@ 0x80
 800049c:	6313      	str	r3, [r2, #48]	@ 0x30
}
 800049e:	e009      	b.n	80004b4 <GPIO_PeriClockControl+0x19c>
		}else if(pGPIOx == GPIOI)
 80004a0:	687b      	ldr	r3, [r7, #4]
 80004a2:	4a10      	ldr	r2, [pc, #64]	@ (80004e4 <GPIO_PeriClockControl+0x1cc>)
 80004a4:	4293      	cmp	r3, r2
 80004a6:	d105      	bne.n	80004b4 <GPIO_PeriClockControl+0x19c>
			GPIOI_PCLK_DIS();
 80004a8:	4b06      	ldr	r3, [pc, #24]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80004aa:	6b1b      	ldr	r3, [r3, #48]	@ 0x30
 80004ac:	4a05      	ldr	r2, [pc, #20]	@ (80004c4 <GPIO_PeriClockControl+0x1ac>)
 80004ae:	f423 7380 	bic.w	r3, r3, #256	@ 0x100
 80004b2:	6313      	str	r3, [r2, #48]	@ 0x30
}
 80004b4:	bf00      	nop
 80004b6:	370c      	adds	r7, #12
 80004b8:	46bd      	mov	sp, r7
 80004ba:	f85d 7b04 	ldr.w	r7, [sp], #4
 80004be:	4770      	bx	lr
 80004c0:	40020000 	.word	0x40020000
 80004c4:	40023800 	.word	0x40023800
 80004c8:	40020400 	.word	0x40020400
 80004cc:	40020800 	.word	0x40020800
 80004d0:	40020c00 	.word	0x40020c00
 80004d4:	40021000 	.word	0x40021000
 80004d8:	40021400 	.word	0x40021400
 80004dc:	40021800 	.word	0x40021800
 80004e0:	40021c00 	.word	0x40021c00
 80004e4:	40022000 	.word	0x40022000

080004e8 <GPIO_Init>:

/*
 * Init and De-init
 */
void GPIO_Init(GPIO_Handle_t *pGPIOHandle)
{
 80004e8:	b480      	push	{r7}
 80004ea:	b087      	sub	sp, #28
 80004ec:	af00      	add	r7, sp, #0
 80004ee:	6078      	str	r0, [r7, #4]
	uint32_t temp = 0;
 80004f0:	2300      	movs	r3, #0
 80004f2:	617b      	str	r3, [r7, #20]
	//1. Configure Mode of GPIO pin
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode <= GPIO_MODE_ANALOG)
 80004f4:	687b      	ldr	r3, [r7, #4]
 80004f6:	795b      	ldrb	r3, [r3, #5]
 80004f8:	2b03      	cmp	r3, #3
 80004fa:	d81f      	bhi.n	800053c <GPIO_Init+0x54>
	{
		temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinMode << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80004fc:	687b      	ldr	r3, [r7, #4]
 80004fe:	795b      	ldrb	r3, [r3, #5]
 8000500:	461a      	mov	r2, r3
 8000502:	687b      	ldr	r3, [r7, #4]
 8000504:	791b      	ldrb	r3, [r3, #4]
 8000506:	005b      	lsls	r3, r3, #1
 8000508:	fa02 f303 	lsl.w	r3, r2, r3
 800050c:	617b      	str	r3, [r7, #20]
		pGPIOHandle->pGPIOx->MODER &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800050e:	687b      	ldr	r3, [r7, #4]
 8000510:	681b      	ldr	r3, [r3, #0]
 8000512:	681a      	ldr	r2, [r3, #0]
 8000514:	687b      	ldr	r3, [r7, #4]
 8000516:	791b      	ldrb	r3, [r3, #4]
 8000518:	4619      	mov	r1, r3
 800051a:	2303      	movs	r3, #3
 800051c:	408b      	lsls	r3, r1
 800051e:	43db      	mvns	r3, r3
 8000520:	4619      	mov	r1, r3
 8000522:	687b      	ldr	r3, [r7, #4]
 8000524:	681b      	ldr	r3, [r3, #0]
 8000526:	400a      	ands	r2, r1
 8000528:	601a      	str	r2, [r3, #0]
		pGPIOHandle->pGPIOx->MODER |= temp;
 800052a:	687b      	ldr	r3, [r7, #4]
 800052c:	681b      	ldr	r3, [r3, #0]
 800052e:	6819      	ldr	r1, [r3, #0]
 8000530:	687b      	ldr	r3, [r7, #4]
 8000532:	681b      	ldr	r3, [r3, #0]
 8000534:	697a      	ldr	r2, [r7, #20]
 8000536:	430a      	orrs	r2, r1
 8000538:	601a      	str	r2, [r3, #0]
 800053a:	e0ca      	b.n	80006d2 <GPIO_Init+0x1ea>

	}else
	{
		if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_FT)
 800053c:	687b      	ldr	r3, [r7, #4]
 800053e:	795b      	ldrb	r3, [r3, #5]
 8000540:	2b04      	cmp	r3, #4
 8000542:	d117      	bne.n	8000574 <GPIO_Init+0x8c>
		{
			//1. Configure the FTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000544:	4b4a      	ldr	r3, [pc, #296]	@ (8000670 <GPIO_Init+0x188>)
 8000546:	68db      	ldr	r3, [r3, #12]
 8000548:	687a      	ldr	r2, [r7, #4]
 800054a:	7912      	ldrb	r2, [r2, #4]
 800054c:	4611      	mov	r1, r2
 800054e:	2201      	movs	r2, #1
 8000550:	408a      	lsls	r2, r1
 8000552:	4611      	mov	r1, r2
 8000554:	4a46      	ldr	r2, [pc, #280]	@ (8000670 <GPIO_Init+0x188>)
 8000556:	430b      	orrs	r3, r1
 8000558:	60d3      	str	r3, [r2, #12]
			// Clear the corresponding RTSR bit
			EXTI->RTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800055a:	4b45      	ldr	r3, [pc, #276]	@ (8000670 <GPIO_Init+0x188>)
 800055c:	689b      	ldr	r3, [r3, #8]
 800055e:	687a      	ldr	r2, [r7, #4]
 8000560:	7912      	ldrb	r2, [r2, #4]
 8000562:	4611      	mov	r1, r2
 8000564:	2201      	movs	r2, #1
 8000566:	408a      	lsls	r2, r1
 8000568:	43d2      	mvns	r2, r2
 800056a:	4611      	mov	r1, r2
 800056c:	4a40      	ldr	r2, [pc, #256]	@ (8000670 <GPIO_Init+0x188>)
 800056e:	400b      	ands	r3, r1
 8000570:	6093      	str	r3, [r2, #8]
 8000572:	e035      	b.n	80005e0 <GPIO_Init+0xf8>


		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RT)
 8000574:	687b      	ldr	r3, [r7, #4]
 8000576:	795b      	ldrb	r3, [r3, #5]
 8000578:	2b05      	cmp	r3, #5
 800057a:	d117      	bne.n	80005ac <GPIO_Init+0xc4>
		{
			//1. Configure the RTSR
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800057c:	4b3c      	ldr	r3, [pc, #240]	@ (8000670 <GPIO_Init+0x188>)
 800057e:	689b      	ldr	r3, [r3, #8]
 8000580:	687a      	ldr	r2, [r7, #4]
 8000582:	7912      	ldrb	r2, [r2, #4]
 8000584:	4611      	mov	r1, r2
 8000586:	2201      	movs	r2, #1
 8000588:	408a      	lsls	r2, r1
 800058a:	4611      	mov	r1, r2
 800058c:	4a38      	ldr	r2, [pc, #224]	@ (8000670 <GPIO_Init+0x188>)
 800058e:	430b      	orrs	r3, r1
 8000590:	6093      	str	r3, [r2, #8]

			// Clear the corresponding FTSR bit
			EXTI->FTSR &= ~(1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 8000592:	4b37      	ldr	r3, [pc, #220]	@ (8000670 <GPIO_Init+0x188>)
 8000594:	68db      	ldr	r3, [r3, #12]
 8000596:	687a      	ldr	r2, [r7, #4]
 8000598:	7912      	ldrb	r2, [r2, #4]
 800059a:	4611      	mov	r1, r2
 800059c:	2201      	movs	r2, #1
 800059e:	408a      	lsls	r2, r1
 80005a0:	43d2      	mvns	r2, r2
 80005a2:	4611      	mov	r1, r2
 80005a4:	4a32      	ldr	r2, [pc, #200]	@ (8000670 <GPIO_Init+0x188>)
 80005a6:	400b      	ands	r3, r1
 80005a8:	60d3      	str	r3, [r2, #12]
 80005aa:	e019      	b.n	80005e0 <GPIO_Init+0xf8>

		}else if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_IT_RFT)
 80005ac:	687b      	ldr	r3, [r7, #4]
 80005ae:	795b      	ldrb	r3, [r3, #5]
 80005b0:	2b06      	cmp	r3, #6
 80005b2:	d115      	bne.n	80005e0 <GPIO_Init+0xf8>
		{
			//1. Configure both the FTSR and RTSR
			EXTI->FTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005b4:	4b2e      	ldr	r3, [pc, #184]	@ (8000670 <GPIO_Init+0x188>)
 80005b6:	68db      	ldr	r3, [r3, #12]
 80005b8:	687a      	ldr	r2, [r7, #4]
 80005ba:	7912      	ldrb	r2, [r2, #4]
 80005bc:	4611      	mov	r1, r2
 80005be:	2201      	movs	r2, #1
 80005c0:	408a      	lsls	r2, r1
 80005c2:	4611      	mov	r1, r2
 80005c4:	4a2a      	ldr	r2, [pc, #168]	@ (8000670 <GPIO_Init+0x188>)
 80005c6:	430b      	orrs	r3, r1
 80005c8:	60d3      	str	r3, [r2, #12]
			EXTI->RTSR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80005ca:	4b29      	ldr	r3, [pc, #164]	@ (8000670 <GPIO_Init+0x188>)
 80005cc:	689b      	ldr	r3, [r3, #8]
 80005ce:	687a      	ldr	r2, [r7, #4]
 80005d0:	7912      	ldrb	r2, [r2, #4]
 80005d2:	4611      	mov	r1, r2
 80005d4:	2201      	movs	r2, #1
 80005d6:	408a      	lsls	r2, r1
 80005d8:	4611      	mov	r1, r2
 80005da:	4a25      	ldr	r2, [pc, #148]	@ (8000670 <GPIO_Init+0x188>)
 80005dc:	430b      	orrs	r3, r1
 80005de:	6093      	str	r3, [r2, #8]
		}

		//2. Configure the GPIO port selection in SYSCFG_EXTICR
		uint8_t temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 4;
 80005e0:	687b      	ldr	r3, [r7, #4]
 80005e2:	791b      	ldrb	r3, [r3, #4]
 80005e4:	089b      	lsrs	r3, r3, #2
 80005e6:	74fb      	strb	r3, [r7, #19]
		uint8_t temp2 =  pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 4;
 80005e8:	687b      	ldr	r3, [r7, #4]
 80005ea:	791b      	ldrb	r3, [r3, #4]
 80005ec:	f003 0303 	and.w	r3, r3, #3
 80005f0:	74bb      	strb	r3, [r7, #18]

		uint8_t portcode = GPIO_BASEADDR_TO_CODE(pGPIOHandle->pGPIOx);
 80005f2:	687b      	ldr	r3, [r7, #4]
 80005f4:	681b      	ldr	r3, [r3, #0]
 80005f6:	4a1f      	ldr	r2, [pc, #124]	@ (8000674 <GPIO_Init+0x18c>)
 80005f8:	4293      	cmp	r3, r2
 80005fa:	d04d      	beq.n	8000698 <GPIO_Init+0x1b0>
 80005fc:	687b      	ldr	r3, [r7, #4]
 80005fe:	681b      	ldr	r3, [r3, #0]
 8000600:	4a1d      	ldr	r2, [pc, #116]	@ (8000678 <GPIO_Init+0x190>)
 8000602:	4293      	cmp	r3, r2
 8000604:	d032      	beq.n	800066c <GPIO_Init+0x184>
 8000606:	687b      	ldr	r3, [r7, #4]
 8000608:	681b      	ldr	r3, [r3, #0]
 800060a:	4a1c      	ldr	r2, [pc, #112]	@ (800067c <GPIO_Init+0x194>)
 800060c:	4293      	cmp	r3, r2
 800060e:	d02b      	beq.n	8000668 <GPIO_Init+0x180>
 8000610:	687b      	ldr	r3, [r7, #4]
 8000612:	681b      	ldr	r3, [r3, #0]
 8000614:	4a1a      	ldr	r2, [pc, #104]	@ (8000680 <GPIO_Init+0x198>)
 8000616:	4293      	cmp	r3, r2
 8000618:	d024      	beq.n	8000664 <GPIO_Init+0x17c>
 800061a:	687b      	ldr	r3, [r7, #4]
 800061c:	681b      	ldr	r3, [r3, #0]
 800061e:	4a19      	ldr	r2, [pc, #100]	@ (8000684 <GPIO_Init+0x19c>)
 8000620:	4293      	cmp	r3, r2
 8000622:	d01d      	beq.n	8000660 <GPIO_Init+0x178>
 8000624:	687b      	ldr	r3, [r7, #4]
 8000626:	681b      	ldr	r3, [r3, #0]
 8000628:	4a17      	ldr	r2, [pc, #92]	@ (8000688 <GPIO_Init+0x1a0>)
 800062a:	4293      	cmp	r3, r2
 800062c:	d016      	beq.n	800065c <GPIO_Init+0x174>
 800062e:	687b      	ldr	r3, [r7, #4]
 8000630:	681b      	ldr	r3, [r3, #0]
 8000632:	4a16      	ldr	r2, [pc, #88]	@ (800068c <GPIO_Init+0x1a4>)
 8000634:	4293      	cmp	r3, r2
 8000636:	d00f      	beq.n	8000658 <GPIO_Init+0x170>
 8000638:	687b      	ldr	r3, [r7, #4]
 800063a:	681b      	ldr	r3, [r3, #0]
 800063c:	4a14      	ldr	r2, [pc, #80]	@ (8000690 <GPIO_Init+0x1a8>)
 800063e:	4293      	cmp	r3, r2
 8000640:	d008      	beq.n	8000654 <GPIO_Init+0x16c>
 8000642:	687b      	ldr	r3, [r7, #4]
 8000644:	681b      	ldr	r3, [r3, #0]
 8000646:	4a13      	ldr	r2, [pc, #76]	@ (8000694 <GPIO_Init+0x1ac>)
 8000648:	4293      	cmp	r3, r2
 800064a:	d101      	bne.n	8000650 <GPIO_Init+0x168>
 800064c:	2308      	movs	r3, #8
 800064e:	e024      	b.n	800069a <GPIO_Init+0x1b2>
 8000650:	2300      	movs	r3, #0
 8000652:	e022      	b.n	800069a <GPIO_Init+0x1b2>
 8000654:	2307      	movs	r3, #7
 8000656:	e020      	b.n	800069a <GPIO_Init+0x1b2>
 8000658:	2306      	movs	r3, #6
 800065a:	e01e      	b.n	800069a <GPIO_Init+0x1b2>
 800065c:	2305      	movs	r3, #5
 800065e:	e01c      	b.n	800069a <GPIO_Init+0x1b2>
 8000660:	2304      	movs	r3, #4
 8000662:	e01a      	b.n	800069a <GPIO_Init+0x1b2>
 8000664:	2303      	movs	r3, #3
 8000666:	e018      	b.n	800069a <GPIO_Init+0x1b2>
 8000668:	2302      	movs	r3, #2
 800066a:	e016      	b.n	800069a <GPIO_Init+0x1b2>
 800066c:	2301      	movs	r3, #1
 800066e:	e014      	b.n	800069a <GPIO_Init+0x1b2>
 8000670:	40013c00 	.word	0x40013c00
 8000674:	40020000 	.word	0x40020000
 8000678:	40020400 	.word	0x40020400
 800067c:	40020800 	.word	0x40020800
 8000680:	40020c00 	.word	0x40020c00
 8000684:	40021000 	.word	0x40021000
 8000688:	40021400 	.word	0x40021400
 800068c:	40021800 	.word	0x40021800
 8000690:	40021c00 	.word	0x40021c00
 8000694:	40022000 	.word	0x40022000
 8000698:	2300      	movs	r3, #0
 800069a:	747b      	strb	r3, [r7, #17]
		SYSCFG_PCLK_EN();
 800069c:	4b5d      	ldr	r3, [pc, #372]	@ (8000814 <GPIO_Init+0x32c>)
 800069e:	6c5b      	ldr	r3, [r3, #68]	@ 0x44
 80006a0:	4a5c      	ldr	r2, [pc, #368]	@ (8000814 <GPIO_Init+0x32c>)
 80006a2:	f443 4380 	orr.w	r3, r3, #16384	@ 0x4000
 80006a6:	6453      	str	r3, [r2, #68]	@ 0x44
		SYSCFG->EXTICR[temp1] = portcode << (temp2 *4);
 80006a8:	7c7a      	ldrb	r2, [r7, #17]
 80006aa:	7cbb      	ldrb	r3, [r7, #18]
 80006ac:	009b      	lsls	r3, r3, #2
 80006ae:	fa02 f103 	lsl.w	r1, r2, r3
 80006b2:	4a59      	ldr	r2, [pc, #356]	@ (8000818 <GPIO_Init+0x330>)
 80006b4:	7cfb      	ldrb	r3, [r7, #19]
 80006b6:	3302      	adds	r3, #2
 80006b8:	f842 1023 	str.w	r1, [r2, r3, lsl #2]

		//3. Enable the EXTI interrupt delivery using IMR (interrupt Mask Register)
		EXTI->IMR |= (1<<pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006bc:	4b57      	ldr	r3, [pc, #348]	@ (800081c <GPIO_Init+0x334>)
 80006be:	681b      	ldr	r3, [r3, #0]
 80006c0:	687a      	ldr	r2, [r7, #4]
 80006c2:	7912      	ldrb	r2, [r2, #4]
 80006c4:	4611      	mov	r1, r2
 80006c6:	2201      	movs	r2, #1
 80006c8:	408a      	lsls	r2, r1
 80006ca:	4611      	mov	r1, r2
 80006cc:	4a53      	ldr	r2, [pc, #332]	@ (800081c <GPIO_Init+0x334>)
 80006ce:	430b      	orrs	r3, r1
 80006d0:	6013      	str	r3, [r2, #0]
	}
	temp = 0;
 80006d2:	2300      	movs	r3, #0
 80006d4:	617b      	str	r3, [r7, #20]
	//2. Configure the Speed
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinSpeed << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 80006d6:	687b      	ldr	r3, [r7, #4]
 80006d8:	799b      	ldrb	r3, [r3, #6]
 80006da:	461a      	mov	r2, r3
 80006dc:	687b      	ldr	r3, [r7, #4]
 80006de:	791b      	ldrb	r3, [r3, #4]
 80006e0:	005b      	lsls	r3, r3, #1
 80006e2:	fa02 f303 	lsl.w	r3, r2, r3
 80006e6:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OSPEEDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 80006e8:	687b      	ldr	r3, [r7, #4]
 80006ea:	681b      	ldr	r3, [r3, #0]
 80006ec:	689a      	ldr	r2, [r3, #8]
 80006ee:	687b      	ldr	r3, [r7, #4]
 80006f0:	791b      	ldrb	r3, [r3, #4]
 80006f2:	4619      	mov	r1, r3
 80006f4:	2303      	movs	r3, #3
 80006f6:	408b      	lsls	r3, r1
 80006f8:	43db      	mvns	r3, r3
 80006fa:	4619      	mov	r1, r3
 80006fc:	687b      	ldr	r3, [r7, #4]
 80006fe:	681b      	ldr	r3, [r3, #0]
 8000700:	400a      	ands	r2, r1
 8000702:	609a      	str	r2, [r3, #8]
	pGPIOHandle->pGPIOx->OSPEEDR |= temp;
 8000704:	687b      	ldr	r3, [r7, #4]
 8000706:	681b      	ldr	r3, [r3, #0]
 8000708:	6899      	ldr	r1, [r3, #8]
 800070a:	687b      	ldr	r3, [r7, #4]
 800070c:	681b      	ldr	r3, [r3, #0]
 800070e:	697a      	ldr	r2, [r7, #20]
 8000710:	430a      	orrs	r2, r1
 8000712:	609a      	str	r2, [r3, #8]
	temp = 0;
 8000714:	2300      	movs	r3, #0
 8000716:	617b      	str	r3, [r7, #20]

	//3. Configure the PuPd settings
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinPuPdControl << (2 * pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber));
 8000718:	687b      	ldr	r3, [r7, #4]
 800071a:	79db      	ldrb	r3, [r3, #7]
 800071c:	461a      	mov	r2, r3
 800071e:	687b      	ldr	r3, [r7, #4]
 8000720:	791b      	ldrb	r3, [r3, #4]
 8000722:	005b      	lsls	r3, r3, #1
 8000724:	fa02 f303 	lsl.w	r3, r2, r3
 8000728:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->PUPDR &= ~(0x3 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800072a:	687b      	ldr	r3, [r7, #4]
 800072c:	681b      	ldr	r3, [r3, #0]
 800072e:	68da      	ldr	r2, [r3, #12]
 8000730:	687b      	ldr	r3, [r7, #4]
 8000732:	791b      	ldrb	r3, [r3, #4]
 8000734:	4619      	mov	r1, r3
 8000736:	2303      	movs	r3, #3
 8000738:	408b      	lsls	r3, r1
 800073a:	43db      	mvns	r3, r3
 800073c:	4619      	mov	r1, r3
 800073e:	687b      	ldr	r3, [r7, #4]
 8000740:	681b      	ldr	r3, [r3, #0]
 8000742:	400a      	ands	r2, r1
 8000744:	60da      	str	r2, [r3, #12]
	pGPIOHandle->pGPIOx->PUPDR |= temp;
 8000746:	687b      	ldr	r3, [r7, #4]
 8000748:	681b      	ldr	r3, [r3, #0]
 800074a:	68d9      	ldr	r1, [r3, #12]
 800074c:	687b      	ldr	r3, [r7, #4]
 800074e:	681b      	ldr	r3, [r3, #0]
 8000750:	697a      	ldr	r2, [r7, #20]
 8000752:	430a      	orrs	r2, r1
 8000754:	60da      	str	r2, [r3, #12]
	temp = 0;
 8000756:	2300      	movs	r3, #0
 8000758:	617b      	str	r3, [r7, #20]

	//4. Configure the OPTYPE
	temp = (pGPIOHandle->GPIO_PinConfig.GPIO_PinOPType << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800075a:	687b      	ldr	r3, [r7, #4]
 800075c:	7a1b      	ldrb	r3, [r3, #8]
 800075e:	461a      	mov	r2, r3
 8000760:	687b      	ldr	r3, [r7, #4]
 8000762:	791b      	ldrb	r3, [r3, #4]
 8000764:	fa02 f303 	lsl.w	r3, r2, r3
 8000768:	617b      	str	r3, [r7, #20]
	pGPIOHandle->pGPIOx->OTYPER &= ~(0x1 << pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber);
 800076a:	687b      	ldr	r3, [r7, #4]
 800076c:	681b      	ldr	r3, [r3, #0]
 800076e:	685a      	ldr	r2, [r3, #4]
 8000770:	687b      	ldr	r3, [r7, #4]
 8000772:	791b      	ldrb	r3, [r3, #4]
 8000774:	4619      	mov	r1, r3
 8000776:	2301      	movs	r3, #1
 8000778:	408b      	lsls	r3, r1
 800077a:	43db      	mvns	r3, r3
 800077c:	4619      	mov	r1, r3
 800077e:	687b      	ldr	r3, [r7, #4]
 8000780:	681b      	ldr	r3, [r3, #0]
 8000782:	400a      	ands	r2, r1
 8000784:	605a      	str	r2, [r3, #4]
	pGPIOHandle->pGPIOx->OTYPER |= temp;
 8000786:	687b      	ldr	r3, [r7, #4]
 8000788:	681b      	ldr	r3, [r3, #0]
 800078a:	6859      	ldr	r1, [r3, #4]
 800078c:	687b      	ldr	r3, [r7, #4]
 800078e:	681b      	ldr	r3, [r3, #0]
 8000790:	697a      	ldr	r2, [r7, #20]
 8000792:	430a      	orrs	r2, r1
 8000794:	605a      	str	r2, [r3, #4]
	temp = 0;
 8000796:	2300      	movs	r3, #0
 8000798:	617b      	str	r3, [r7, #20]
	//5. Configure the Alt functionality
	if(pGPIOHandle->GPIO_PinConfig.GPIO_PinMode == GPIO_MODE_ALTFN)
 800079a:	687b      	ldr	r3, [r7, #4]
 800079c:	795b      	ldrb	r3, [r3, #5]
 800079e:	2b02      	cmp	r3, #2
 80007a0:	d132      	bne.n	8000808 <GPIO_Init+0x320>
	{
		uint32_t temp1, temp2;
		temp1 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber / 8;
 80007a2:	687b      	ldr	r3, [r7, #4]
 80007a4:	791b      	ldrb	r3, [r3, #4]
 80007a6:	08db      	lsrs	r3, r3, #3
 80007a8:	b2db      	uxtb	r3, r3
 80007aa:	60fb      	str	r3, [r7, #12]
		temp2 = pGPIOHandle->GPIO_PinConfig.GPIO_PinNumber % 8;
 80007ac:	687b      	ldr	r3, [r7, #4]
 80007ae:	791b      	ldrb	r3, [r3, #4]
 80007b0:	f003 0307 	and.w	r3, r3, #7
 80007b4:	60bb      	str	r3, [r7, #8]
		pGPIOHandle->pGPIOx->AFR[temp1] &= ~(0xF << (4 *temp2));
 80007b6:	687b      	ldr	r3, [r7, #4]
 80007b8:	681b      	ldr	r3, [r3, #0]
 80007ba:	68fa      	ldr	r2, [r7, #12]
 80007bc:	3208      	adds	r2, #8
 80007be:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007c2:	68bb      	ldr	r3, [r7, #8]
 80007c4:	009b      	lsls	r3, r3, #2
 80007c6:	210f      	movs	r1, #15
 80007c8:	fa01 f303 	lsl.w	r3, r1, r3
 80007cc:	43db      	mvns	r3, r3
 80007ce:	4619      	mov	r1, r3
 80007d0:	687b      	ldr	r3, [r7, #4]
 80007d2:	681b      	ldr	r3, [r3, #0]
 80007d4:	4011      	ands	r1, r2
 80007d6:	68fa      	ldr	r2, [r7, #12]
 80007d8:	3208      	adds	r2, #8
 80007da:	f843 1022 	str.w	r1, [r3, r2, lsl #2]

		pGPIOHandle->pGPIOx->AFR[temp1] |= (pGPIOHandle->GPIO_PinConfig.GPIO_PinAltFunMode << (4 * temp2));
 80007de:	687b      	ldr	r3, [r7, #4]
 80007e0:	681b      	ldr	r3, [r3, #0]
 80007e2:	68fa      	ldr	r2, [r7, #12]
 80007e4:	3208      	adds	r2, #8
 80007e6:	f853 2022 	ldr.w	r2, [r3, r2, lsl #2]
 80007ea:	687b      	ldr	r3, [r7, #4]
 80007ec:	7a5b      	ldrb	r3, [r3, #9]
 80007ee:	4619      	mov	r1, r3
 80007f0:	68bb      	ldr	r3, [r7, #8]
 80007f2:	009b      	lsls	r3, r3, #2
 80007f4:	fa01 f303 	lsl.w	r3, r1, r3
 80007f8:	4619      	mov	r1, r3
 80007fa:	687b      	ldr	r3, [r7, #4]
 80007fc:	681b      	ldr	r3, [r3, #0]
 80007fe:	4311      	orrs	r1, r2
 8000800:	68fa      	ldr	r2, [r7, #12]
 8000802:	3208      	adds	r2, #8
 8000804:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
	}

}
 8000808:	bf00      	nop
 800080a:	371c      	adds	r7, #28
 800080c:	46bd      	mov	sp, r7
 800080e:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000812:	4770      	bx	lr
 8000814:	40023800 	.word	0x40023800
 8000818:	40013800 	.word	0x40013800
 800081c:	40013c00 	.word	0x40013c00

08000820 <GPIO_ReadFromInputPin>:

/*
 *  return the Pin is input or not as 0 or 1
 */
uint8_t GPIO_ReadFromInputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 8000820:	b480      	push	{r7}
 8000822:	b085      	sub	sp, #20
 8000824:	af00      	add	r7, sp, #0
 8000826:	6078      	str	r0, [r7, #4]
 8000828:	460b      	mov	r3, r1
 800082a:	70fb      	strb	r3, [r7, #3]

	uint8_t value;
	value = (uint8_t)((pGPIOx->IDR >> PinNumber) & (0x00000001));
 800082c:	687b      	ldr	r3, [r7, #4]
 800082e:	691a      	ldr	r2, [r3, #16]
 8000830:	78fb      	ldrb	r3, [r7, #3]
 8000832:	fa22 f303 	lsr.w	r3, r2, r3
 8000836:	b2db      	uxtb	r3, r3
 8000838:	f003 0301 	and.w	r3, r3, #1
 800083c:	73fb      	strb	r3, [r7, #15]
	return value;
 800083e:	7bfb      	ldrb	r3, [r7, #15]
}
 8000840:	4618      	mov	r0, r3
 8000842:	3714      	adds	r7, #20
 8000844:	46bd      	mov	sp, r7
 8000846:	f85d 7b04 	ldr.w	r7, [sp], #4
 800084a:	4770      	bx	lr

0800084c <GPIO_ToggleOutputPin>:
	pGPIOx->ODR = Value;
}


void GPIO_ToggleOutputPin(GPIO_RegDef_t *pGPIOx, uint8_t PinNumber)
{
 800084c:	b480      	push	{r7}
 800084e:	b083      	sub	sp, #12
 8000850:	af00      	add	r7, sp, #0
 8000852:	6078      	str	r0, [r7, #4]
 8000854:	460b      	mov	r3, r1
 8000856:	70fb      	strb	r3, [r7, #3]
	pGPIOx->ODR ^= (1 << PinNumber);
 8000858:	687b      	ldr	r3, [r7, #4]
 800085a:	695b      	ldr	r3, [r3, #20]
 800085c:	78fa      	ldrb	r2, [r7, #3]
 800085e:	2101      	movs	r1, #1
 8000860:	fa01 f202 	lsl.w	r2, r1, r2
 8000864:	405a      	eors	r2, r3
 8000866:	687b      	ldr	r3, [r7, #4]
 8000868:	615a      	str	r2, [r3, #20]
}
 800086a:	bf00      	nop
 800086c:	370c      	adds	r7, #12
 800086e:	46bd      	mov	sp, r7
 8000870:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000874:	4770      	bx	lr
	...

08000878 <GPIO_IRQInterruptConfig>:

/*
 * IRQ Confifuration and ISR handling
 */
void GPIO_IRQInterruptConfig(uint8_t IRQNumber, uint8_t EnorDi)
{
 8000878:	b480      	push	{r7}
 800087a:	b083      	sub	sp, #12
 800087c:	af00      	add	r7, sp, #0
 800087e:	4603      	mov	r3, r0
 8000880:	460a      	mov	r2, r1
 8000882:	71fb      	strb	r3, [r7, #7]
 8000884:	4613      	mov	r3, r2
 8000886:	71bb      	strb	r3, [r7, #6]
	if(EnorDi == ENABLE)
 8000888:	79bb      	ldrb	r3, [r7, #6]
 800088a:	2b01      	cmp	r3, #1
 800088c:	d147      	bne.n	800091e <GPIO_IRQInterruptConfig+0xa6>
	{
		if(IRQNumber <= 31)
 800088e:	79fb      	ldrb	r3, [r7, #7]
 8000890:	2b1f      	cmp	r3, #31
 8000892:	d80a      	bhi.n	80008aa <GPIO_IRQInterruptConfig+0x32>
		{
			//Program ISER0 Register
			*NVIC_ISER0 |= (1 << IRQNumber);
 8000894:	4b4a      	ldr	r3, [pc, #296]	@ (80009c0 <GPIO_IRQInterruptConfig+0x148>)
 8000896:	681b      	ldr	r3, [r3, #0]
 8000898:	79fa      	ldrb	r2, [r7, #7]
 800089a:	2101      	movs	r1, #1
 800089c:	fa01 f202 	lsl.w	r2, r1, r2
 80008a0:	4611      	mov	r1, r2
 80008a2:	4a47      	ldr	r2, [pc, #284]	@ (80009c0 <GPIO_IRQInterruptConfig+0x148>)
 80008a4:	430b      	orrs	r3, r1
 80008a6:	6013      	str	r3, [r2, #0]
		{
			//Program ICER2 Register
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
		}
	}
}
 80008a8:	e083      	b.n	80009b2 <GPIO_IRQInterruptConfig+0x13a>
		}else if(IRQNumber > 31 & IRQNumber < 64) //32 to 63
 80008aa:	79fb      	ldrb	r3, [r7, #7]
 80008ac:	2b1f      	cmp	r3, #31
 80008ae:	bf8c      	ite	hi
 80008b0:	2301      	movhi	r3, #1
 80008b2:	2300      	movls	r3, #0
 80008b4:	b2da      	uxtb	r2, r3
 80008b6:	79fb      	ldrb	r3, [r7, #7]
 80008b8:	2b3f      	cmp	r3, #63	@ 0x3f
 80008ba:	bf94      	ite	ls
 80008bc:	2301      	movls	r3, #1
 80008be:	2300      	movhi	r3, #0
 80008c0:	b2db      	uxtb	r3, r3
 80008c2:	4013      	ands	r3, r2
 80008c4:	b2db      	uxtb	r3, r3
 80008c6:	2b00      	cmp	r3, #0
 80008c8:	d00c      	beq.n	80008e4 <GPIO_IRQInterruptConfig+0x6c>
			*NVIC_ISER1 |= (1 << (IRQNumber % 32));
 80008ca:	4b3e      	ldr	r3, [pc, #248]	@ (80009c4 <GPIO_IRQInterruptConfig+0x14c>)
 80008cc:	681b      	ldr	r3, [r3, #0]
 80008ce:	79fa      	ldrb	r2, [r7, #7]
 80008d0:	f002 021f 	and.w	r2, r2, #31
 80008d4:	2101      	movs	r1, #1
 80008d6:	fa01 f202 	lsl.w	r2, r1, r2
 80008da:	4611      	mov	r1, r2
 80008dc:	4a39      	ldr	r2, [pc, #228]	@ (80009c4 <GPIO_IRQInterruptConfig+0x14c>)
 80008de:	430b      	orrs	r3, r1
 80008e0:	6013      	str	r3, [r2, #0]
}
 80008e2:	e066      	b.n	80009b2 <GPIO_IRQInterruptConfig+0x13a>
		}else if(IRQNumber >= 64 & IRQNumber < 96) //64 to 95
 80008e4:	79fb      	ldrb	r3, [r7, #7]
 80008e6:	2b3f      	cmp	r3, #63	@ 0x3f
 80008e8:	bf8c      	ite	hi
 80008ea:	2301      	movhi	r3, #1
 80008ec:	2300      	movls	r3, #0
 80008ee:	b2da      	uxtb	r2, r3
 80008f0:	79fb      	ldrb	r3, [r7, #7]
 80008f2:	2b5f      	cmp	r3, #95	@ 0x5f
 80008f4:	bf94      	ite	ls
 80008f6:	2301      	movls	r3, #1
 80008f8:	2300      	movhi	r3, #0
 80008fa:	b2db      	uxtb	r3, r3
 80008fc:	4013      	ands	r3, r2
 80008fe:	b2db      	uxtb	r3, r3
 8000900:	2b00      	cmp	r3, #0
 8000902:	d056      	beq.n	80009b2 <GPIO_IRQInterruptConfig+0x13a>
			*NVIC_ISER2 |= (1 << (IRQNumber % 64));
 8000904:	4b30      	ldr	r3, [pc, #192]	@ (80009c8 <GPIO_IRQInterruptConfig+0x150>)
 8000906:	681b      	ldr	r3, [r3, #0]
 8000908:	79fa      	ldrb	r2, [r7, #7]
 800090a:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 800090e:	2101      	movs	r1, #1
 8000910:	fa01 f202 	lsl.w	r2, r1, r2
 8000914:	4611      	mov	r1, r2
 8000916:	4a2c      	ldr	r2, [pc, #176]	@ (80009c8 <GPIO_IRQInterruptConfig+0x150>)
 8000918:	430b      	orrs	r3, r1
 800091a:	6013      	str	r3, [r2, #0]
}
 800091c:	e049      	b.n	80009b2 <GPIO_IRQInterruptConfig+0x13a>
	}else if(EnorDi == DISABLE)
 800091e:	79bb      	ldrb	r3, [r7, #6]
 8000920:	2b00      	cmp	r3, #0
 8000922:	d146      	bne.n	80009b2 <GPIO_IRQInterruptConfig+0x13a>
		if(IRQNumber <= 31)
 8000924:	79fb      	ldrb	r3, [r7, #7]
 8000926:	2b1f      	cmp	r3, #31
 8000928:	d80a      	bhi.n	8000940 <GPIO_IRQInterruptConfig+0xc8>
			*NVIC_ICER0 |= (1 << IRQNumber);
 800092a:	4b28      	ldr	r3, [pc, #160]	@ (80009cc <GPIO_IRQInterruptConfig+0x154>)
 800092c:	681b      	ldr	r3, [r3, #0]
 800092e:	79fa      	ldrb	r2, [r7, #7]
 8000930:	2101      	movs	r1, #1
 8000932:	fa01 f202 	lsl.w	r2, r1, r2
 8000936:	4611      	mov	r1, r2
 8000938:	4a24      	ldr	r2, [pc, #144]	@ (80009cc <GPIO_IRQInterruptConfig+0x154>)
 800093a:	430b      	orrs	r3, r1
 800093c:	6013      	str	r3, [r2, #0]
}
 800093e:	e038      	b.n	80009b2 <GPIO_IRQInterruptConfig+0x13a>
		}else if(IRQNumber > 31 & IRQNumber < 64)
 8000940:	79fb      	ldrb	r3, [r7, #7]
 8000942:	2b1f      	cmp	r3, #31
 8000944:	bf8c      	ite	hi
 8000946:	2301      	movhi	r3, #1
 8000948:	2300      	movls	r3, #0
 800094a:	b2da      	uxtb	r2, r3
 800094c:	79fb      	ldrb	r3, [r7, #7]
 800094e:	2b3f      	cmp	r3, #63	@ 0x3f
 8000950:	bf94      	ite	ls
 8000952:	2301      	movls	r3, #1
 8000954:	2300      	movhi	r3, #0
 8000956:	b2db      	uxtb	r3, r3
 8000958:	4013      	ands	r3, r2
 800095a:	b2db      	uxtb	r3, r3
 800095c:	2b00      	cmp	r3, #0
 800095e:	d00c      	beq.n	800097a <GPIO_IRQInterruptConfig+0x102>
			*NVIC_ICER1 |= (1 << (IRQNumber % 32));
 8000960:	4b1b      	ldr	r3, [pc, #108]	@ (80009d0 <GPIO_IRQInterruptConfig+0x158>)
 8000962:	681b      	ldr	r3, [r3, #0]
 8000964:	79fa      	ldrb	r2, [r7, #7]
 8000966:	f002 021f 	and.w	r2, r2, #31
 800096a:	2101      	movs	r1, #1
 800096c:	fa01 f202 	lsl.w	r2, r1, r2
 8000970:	4611      	mov	r1, r2
 8000972:	4a17      	ldr	r2, [pc, #92]	@ (80009d0 <GPIO_IRQInterruptConfig+0x158>)
 8000974:	430b      	orrs	r3, r1
 8000976:	6013      	str	r3, [r2, #0]
}
 8000978:	e01b      	b.n	80009b2 <GPIO_IRQInterruptConfig+0x13a>
		}else if(IRQNumber >= 64 & IRQNumber < 96)
 800097a:	79fb      	ldrb	r3, [r7, #7]
 800097c:	2b3f      	cmp	r3, #63	@ 0x3f
 800097e:	bf8c      	ite	hi
 8000980:	2301      	movhi	r3, #1
 8000982:	2300      	movls	r3, #0
 8000984:	b2da      	uxtb	r2, r3
 8000986:	79fb      	ldrb	r3, [r7, #7]
 8000988:	2b5f      	cmp	r3, #95	@ 0x5f
 800098a:	bf94      	ite	ls
 800098c:	2301      	movls	r3, #1
 800098e:	2300      	movhi	r3, #0
 8000990:	b2db      	uxtb	r3, r3
 8000992:	4013      	ands	r3, r2
 8000994:	b2db      	uxtb	r3, r3
 8000996:	2b00      	cmp	r3, #0
 8000998:	d00b      	beq.n	80009b2 <GPIO_IRQInterruptConfig+0x13a>
			*NVIC_ICER2 |= (1 << (IRQNumber % 64));
 800099a:	4b0e      	ldr	r3, [pc, #56]	@ (80009d4 <GPIO_IRQInterruptConfig+0x15c>)
 800099c:	681b      	ldr	r3, [r3, #0]
 800099e:	79fa      	ldrb	r2, [r7, #7]
 80009a0:	f002 023f 	and.w	r2, r2, #63	@ 0x3f
 80009a4:	2101      	movs	r1, #1
 80009a6:	fa01 f202 	lsl.w	r2, r1, r2
 80009aa:	4611      	mov	r1, r2
 80009ac:	4a09      	ldr	r2, [pc, #36]	@ (80009d4 <GPIO_IRQInterruptConfig+0x15c>)
 80009ae:	430b      	orrs	r3, r1
 80009b0:	6013      	str	r3, [r2, #0]
}
 80009b2:	bf00      	nop
 80009b4:	370c      	adds	r7, #12
 80009b6:	46bd      	mov	sp, r7
 80009b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 80009bc:	4770      	bx	lr
 80009be:	bf00      	nop
 80009c0:	e000e100 	.word	0xe000e100
 80009c4:	e000e104 	.word	0xe000e104
 80009c8:	e000e108 	.word	0xe000e108
 80009cc:	e000e180 	.word	0xe000e180
 80009d0:	e000e184 	.word	0xe000e184
 80009d4:	e000e188 	.word	0xe000e188

080009d8 <GPIO_IRQPriorityConfig>:

void GPIO_IRQPriorityConfig(uint8_t IRQNumber, uint32_t IRQPriority)
{
 80009d8:	b480      	push	{r7}
 80009da:	b085      	sub	sp, #20
 80009dc:	af00      	add	r7, sp, #0
 80009de:	4603      	mov	r3, r0
 80009e0:	6039      	str	r1, [r7, #0]
 80009e2:	71fb      	strb	r3, [r7, #7]
	uint8_t iprx = IRQNumber / 4;
 80009e4:	79fb      	ldrb	r3, [r7, #7]
 80009e6:	089b      	lsrs	r3, r3, #2
 80009e8:	73fb      	strb	r3, [r7, #15]
	uint8_t iprx_section = IRQNumber % 4;
 80009ea:	79fb      	ldrb	r3, [r7, #7]
 80009ec:	f003 0303 	and.w	r3, r3, #3
 80009f0:	73bb      	strb	r3, [r7, #14]
	uint8_t shift_amount  = (iprx_section * 8) + (8 - NO_PR_BITS_IMPLEMENTED);
 80009f2:	7bbb      	ldrb	r3, [r7, #14]
 80009f4:	00db      	lsls	r3, r3, #3
 80009f6:	b2db      	uxtb	r3, r3
 80009f8:	3304      	adds	r3, #4
 80009fa:	737b      	strb	r3, [r7, #13]

	*(NVIC_PR_BASE_ADDR + iprx) |= (IRQPriority << shift_amount);
 80009fc:	7bfb      	ldrb	r3, [r7, #15]
 80009fe:	009b      	lsls	r3, r3, #2
 8000a00:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000a04:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000a08:	6819      	ldr	r1, [r3, #0]
 8000a0a:	7b7b      	ldrb	r3, [r7, #13]
 8000a0c:	683a      	ldr	r2, [r7, #0]
 8000a0e:	409a      	lsls	r2, r3
 8000a10:	7bfb      	ldrb	r3, [r7, #15]
 8000a12:	009b      	lsls	r3, r3, #2
 8000a14:	f103 4360 	add.w	r3, r3, #3758096384	@ 0xe0000000
 8000a18:	f503 4364 	add.w	r3, r3, #58368	@ 0xe400
 8000a1c:	430a      	orrs	r2, r1
 8000a1e:	601a      	str	r2, [r3, #0]

}
 8000a20:	bf00      	nop
 8000a22:	3714      	adds	r7, #20
 8000a24:	46bd      	mov	sp, r7
 8000a26:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a2a:	4770      	bx	lr

08000a2c <GPIO_IRQHandling>:


void GPIO_IRQHandling(uint8_t PinNumber)
{
 8000a2c:	b480      	push	{r7}
 8000a2e:	b083      	sub	sp, #12
 8000a30:	af00      	add	r7, sp, #0
 8000a32:	4603      	mov	r3, r0
 8000a34:	71fb      	strb	r3, [r7, #7]
	//Clear the EXTI PR Register corresponding to the pin number
	if(EXTI->PR & (1 << PinNumber))
 8000a36:	4b0c      	ldr	r3, [pc, #48]	@ (8000a68 <GPIO_IRQHandling+0x3c>)
 8000a38:	695b      	ldr	r3, [r3, #20]
 8000a3a:	79fa      	ldrb	r2, [r7, #7]
 8000a3c:	2101      	movs	r1, #1
 8000a3e:	fa01 f202 	lsl.w	r2, r1, r2
 8000a42:	4013      	ands	r3, r2
 8000a44:	2b00      	cmp	r3, #0
 8000a46:	d009      	beq.n	8000a5c <GPIO_IRQHandling+0x30>
	{
		//Clear (Clearing done by setting 1)
		EXTI->PR |= (1 << PinNumber);
 8000a48:	4b07      	ldr	r3, [pc, #28]	@ (8000a68 <GPIO_IRQHandling+0x3c>)
 8000a4a:	695b      	ldr	r3, [r3, #20]
 8000a4c:	79fa      	ldrb	r2, [r7, #7]
 8000a4e:	2101      	movs	r1, #1
 8000a50:	fa01 f202 	lsl.w	r2, r1, r2
 8000a54:	4611      	mov	r1, r2
 8000a56:	4a04      	ldr	r2, [pc, #16]	@ (8000a68 <GPIO_IRQHandling+0x3c>)
 8000a58:	430b      	orrs	r3, r1
 8000a5a:	6153      	str	r3, [r2, #20]
	}

}
 8000a5c:	bf00      	nop
 8000a5e:	370c      	adds	r7, #12
 8000a60:	46bd      	mov	sp, r7
 8000a62:	f85d 7b04 	ldr.w	r7, [sp], #4
 8000a66:	4770      	bx	lr
 8000a68:	40013c00 	.word	0x40013c00

08000a6c <memset>:
 8000a6c:	4402      	add	r2, r0
 8000a6e:	4603      	mov	r3, r0
 8000a70:	4293      	cmp	r3, r2
 8000a72:	d100      	bne.n	8000a76 <memset+0xa>
 8000a74:	4770      	bx	lr
 8000a76:	f803 1b01 	strb.w	r1, [r3], #1
 8000a7a:	e7f9      	b.n	8000a70 <memset+0x4>

08000a7c <__libc_init_array>:
 8000a7c:	b570      	push	{r4, r5, r6, lr}
 8000a7e:	4d0d      	ldr	r5, [pc, #52]	@ (8000ab4 <__libc_init_array+0x38>)
 8000a80:	4c0d      	ldr	r4, [pc, #52]	@ (8000ab8 <__libc_init_array+0x3c>)
 8000a82:	1b64      	subs	r4, r4, r5
 8000a84:	10a4      	asrs	r4, r4, #2
 8000a86:	2600      	movs	r6, #0
 8000a88:	42a6      	cmp	r6, r4
 8000a8a:	d109      	bne.n	8000aa0 <__libc_init_array+0x24>
 8000a8c:	4d0b      	ldr	r5, [pc, #44]	@ (8000abc <__libc_init_array+0x40>)
 8000a8e:	4c0c      	ldr	r4, [pc, #48]	@ (8000ac0 <__libc_init_array+0x44>)
 8000a90:	f000 f818 	bl	8000ac4 <_init>
 8000a94:	1b64      	subs	r4, r4, r5
 8000a96:	10a4      	asrs	r4, r4, #2
 8000a98:	2600      	movs	r6, #0
 8000a9a:	42a6      	cmp	r6, r4
 8000a9c:	d105      	bne.n	8000aaa <__libc_init_array+0x2e>
 8000a9e:	bd70      	pop	{r4, r5, r6, pc}
 8000aa0:	f855 3b04 	ldr.w	r3, [r5], #4
 8000aa4:	4798      	blx	r3
 8000aa6:	3601      	adds	r6, #1
 8000aa8:	e7ee      	b.n	8000a88 <__libc_init_array+0xc>
 8000aaa:	f855 3b04 	ldr.w	r3, [r5], #4
 8000aae:	4798      	blx	r3
 8000ab0:	3601      	adds	r6, #1
 8000ab2:	e7f2      	b.n	8000a9a <__libc_init_array+0x1e>
 8000ab4:	08000adc 	.word	0x08000adc
 8000ab8:	08000adc 	.word	0x08000adc
 8000abc:	08000adc 	.word	0x08000adc
 8000ac0:	08000ae0 	.word	0x08000ae0

08000ac4 <_init>:
 8000ac4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ac6:	bf00      	nop
 8000ac8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000aca:	bc08      	pop	{r3}
 8000acc:	469e      	mov	lr, r3
 8000ace:	4770      	bx	lr

08000ad0 <_fini>:
 8000ad0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 8000ad2:	bf00      	nop
 8000ad4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 8000ad6:	bc08      	pop	{r3}
 8000ad8:	469e      	mov	lr, r3
 8000ada:	4770      	bx	lr
